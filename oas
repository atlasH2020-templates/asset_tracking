{
  "openapi": "3.0.2",
  "info": {
    "title": "Asset Tracking Service Template",
    "description": "Tracking shipments and movements and environmental measurements of assets",
    "version": "0.1.0"
  },
  "externalDocs": {
    "description": "Service template document",
    "url": "https://htmlpreview.github.io/?https://github.com/atlasH2020-templates/asset_tracking/blob/v0.1.0/doc.html"
  },
  "paths": {
    "/shipments": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "List shipments",
        "description": "List shipments, optionally filtered by dates and/or type",
        "operationId": "list_shipments",
        "parameters": [
          {
            "description": "The type of shipments to include",
            "name": "type",
            "in": "query",
            "required": false,
            "example": "livestock",
            "schema": {
              "$ref": "#/components/schemas/ShipmentContentType"
            }
          },
          {
            "description": "Include only shipments with matching status.",
            "name": "status",
            "in": "query",
            "required": false,
            "example": "in_transit",
            "schema": {
              "$ref": "#/components/schemas/ShipmentStatus"
            }
          },
          {
            "description": "Include only shipments that have been picked up or planned for pickup on or after this date/time",
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentList"
                },
                "example": [
                  {
                    "id": "12345",
                    "description": "cattle and pigs",
                    "status": "in_transit",
                    "pickup_date": "2022-10-17T12:00:00Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get shipment info",
        "operationId": "get_shipment",
        "parameters": [
          {
            "description": "The ID of the shipment",
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "example": "12345",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShipmentInfo"
                },
                "example": {
                  "id": "12345",
                  "description": "cattle and pigs",
                  "status": "in_transit",
                  "pickup_date": "2022-10-17T12:00:00Z",
                  "delivery_date": "2022-10-17T14:00:00Z",
                  "pickup_location": {
                    "latitude": 47.47234095378895,
                    "longitude": 8.475920390302981
                  },
                  "delivery_location": {
                    "latitude": 47.39455609465865,
                    "longitude": 8.506354255933608
                  },
                  "manifest": [
                    {
                      "type": "livestock",
                      "kind": "pigs",
                      "count": 97
                    },
                    {
                      "type": "livestock",
                      "kind": "cattle",
                      "count": 20
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "shipment_id do not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    },
    "/shipments/{shipment_id}/track": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get tracking data for returnable assets. There must be at least one entry when status=in_transit (pickup time/location); it is acceptable to include only last known time/location. Tracking data MAY also be returned for completed shipments. In all other cases 204 must be returned.",
        "operationId": "track_shipment",
        "parameters": [
          {
            "name": "shipment_id",
            "in": "path",
            "required": true,
            "example": "12345"
          },
          {
            "name": "limit",
            "type": "integer",
            "default": 0,
            "in": "query",
            "required": false,
            "description": "Max number of data points to be returned; the latest #limit points are returned and earlier ones are omitted. Service implementations are free to define a proprietary maximum value for limit. That same value must be used when limit=0 (or omitted)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrackingData"
                },
                "example": [
                  {
                    "timestamp": "2022-10-17T16:30:13Z",
                    "eta": "2022-10-17T17:00Z",
                    "location": {
                      "latitude": 43.54,
                      "longitude": 10.23
                    },
                    "measurements": {
                      "temperature": 29.5,
                      "humidity": 50.1,
                      "pressure": 1020
                    }
                  }
                ]
              }
            }
          },
          "204": {
            "description": "When shipment status is planned, or when shipment_status is completed and tracking data is not archived. Not a valid response when shipment_status is in_transit".
          },
          "400": {
            "description": "Invalid or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or missing credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "404": {
            "description": "Unknown identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "409": {
            "description": "The shipment state is 'planned'.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "410": {
            "description": "The shipment state is 'completed'.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ShipmentList": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the shipment."
            },
            "description": {
              "type": "string",
              "description": "Short human-readable description of the shipment."
            },
            "status": {
              "$ref": "#/components/schemas/ShipmentStatus"
            },
            "pickup_date": {
              "type": "string",
              "format": "date-time",
              "description": "The date/time when the shipment was picked up or is planned for pickup"
            }
          },
          "required": [
            "id",
            "description",
            "status",
            "pickup_date"
          ]
        }
      },
      "ShipmentInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the shipment."
          },
          "description": {
            "type": "string",
            "description": "Short human-readable description of the shipment."
          },
          "status": {
            "$ref": "#/components/schemas/ShipmentStatus"
          },
          "pickup_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date/time when the shipment was picked up (status=in_transit|completed) or is planned for pickup"
          },
          "delivery_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date/time of the shipment's actual delivery (status=completed), or the planned delivery date/time."
          },
          "pickup_location": {
            "$ref": "#/components/schemas/Location"
          },
          "delivery_location": {
            "$ref": "#/components/schemas/Location"
          },
          "notes": {
            "type": "string",
            "description": "Optional human-readable notes related to the shipment."
          },
          "manifest": {
            "type": "array",
            "minItems": 1,
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of content.",
                      "$ref": "#/components/schemas/ShipmentContentType"
                    }
                  }
                },
                {
                  "$ref": "#/components/schemas/ShipmentDetails"
                }
              ]
            }
          }
        },
        "required": [
          "id",
          "description",
          "status",
          "pickup_date",
          "delivery_date",
          "pickup_location",
          "delivery_location",
          "manifest"
        ]
      },
      "TrackingData": {
        "description": "Tracking data for shipments in_transit. May optionally be returned as well for completed shipments.",
        "type": "array",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "ISO-8601 timestamp of the data point"
            },
            "eta": {
              "type": "string",
              "format": "date-time",
              "description": "Estimated time of arrival."
            },
            "location": {
              "$ref": "#/components/schemas/Location",
              "description": "Location at the timestamp."
            },
            "measurements": {
              "type": "object",
              "properties": {
                "temperature": {
                  "type": "number",
                  "description": "Measured temperature of the asset's temperature sensor in celsius degree"
                },
                "humidity": {
                  "type": "number",
                  "description": "Measured humidity of the asset's humidity sensor in percentage"
                },
                "pressure": {
                  "type": "number",
                  "description": "Measured pressure of the asset's pressure sensor in hectopascal"
                }
              }
            }
          },
          "required": [
            "timestamp",
            "eta"
          ]
        }
      },
      "ShipmentContentType": {
        "type": "string",
        "enum": [
          "livestock",
          "other"
        ]
      },
      "ShipmentStatus": {
        "type": "string",
        "enum": [
          "planned",
          "in_transit",
          "completed"
        ]
      },
      "Location": {
        "description": "WGS 84 coordinates",
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ]
      },
      "ShipmentDetails": {
        "description": "Depends on the shipment content type",
        "oneOf": [
          {
            "$ref": "#/components/schemas/LivestockDetails"
          },
          {
            "$ref": "#/components/schemas/OtherDetails"
          }
        ]
      },
      "LivestockDetails": {
        "description": "These parameters are returned for shipment.type=livestock",
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "cattle",
              "sheep",
              "pigs",
              "chicken",
              "other"
            ]
          },
          "count": {
            "type": "integer",
            "description": "Head count"
          },
          "additional_info": {
            "type": "string",
            "description": "Additional human-readable information"
          }
        },
        "required": [
          "type",
          "count"
        ]
      },
      "OtherDetails": {
        "description": "These parameters are returned for shipment.type=other",
        "type": "object",
        "properties": {
          "additional_info": {
            "type": "string",
            "description": "Additional human-readable information"
          }
        }
      },
      "DetailedError": {
        "type": "object",
        "description": "This defines the structure of an error payload when one is present. Actual messages and additional error information content may change from one implementation to another",
        "properties": {
          "message": {
            "type": "string",
            "description": "error description"
          },
          "status": {
            "type": "string",
            "format": "number",
            "description": "http error code"
          },
          "error_url": {
            "type": "string",
            "format": "uri",
            "description": "A service's proprietary UI url where the user may navigate to view additional information or be prompted for additional actions to deal with the error. A well-behaved FMIS will present his users with a visual indication and the means to click on this link when this attribute is present."
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional detailed information"
          }
        },
        "required": [
          "message"
        ],
        "example": {
          "message": "this is a sample error message",
          "errors": [
            "this is an example of additional error information"
          ]
        }
      }
    }
  }
}
